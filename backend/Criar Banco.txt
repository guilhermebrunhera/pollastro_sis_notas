CREATE DATABASE IF NOT EXISTS pollastro_sistema;
USE pollastro_sistema;

-- Tabela de clientes
CREATE TABLE clientes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    telefone VARCHAR(20),
    email VARCHAR(100),
    endereco TEXT
);

-- Tabela de produtos ou serviços
CREATE TABLE produtos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10,2) NOT NULL
);

-- Tabela de notas de serviço
CREATE TABLE notas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT NOT NULL,
    data_emissao DATETIME DEFAULT CURRENT_TIMESTAMP,
    observacoes TEXT,
    status ENUM('Producao', 'Cancelada', 'Finalizada') DEFAULT 'Producao',
    FOREIGN KEY (cliente_id) REFERENCES clientes(id)

);

-- Tabela de itens da nota (relaciona produtos/serviços à nota)
CREATE TABLE nota_itens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nota_id INT NOT NULL,
    produto_id INT NOT NULL,
    quantidade INT DEFAULT 1,
    preco_unitario DECIMAL(10,2),
    FOREIGN KEY (nota_id) REFERENCES notas(id),
    FOREIGN KEY (produto_id) REFERENCES produtos(id)
);

ALTER TABLE produtos
ADD COLUMN tipo ENUM('S', 'P') NOT NULL DEFAULT 'P';

ALTER TABLE clientes
ADD COLUMN cpf_cnpj VARCHAR(18) NULL;

ALTER TABLE notas
ADD COLUMN desconto DECIMAL(10,2) NULL;

ALTER TABLE notas
add column desconto_obs varchar(255) default "";

ALTER TABLE notas
ADD COLUMN nota_impressa BOOLEAN NOT NULL DEFAULT FALSE;

ALTER TABLE notas 
MODIFY COLUMN status ENUM('Producao', 'Cancelada', 'Finalizada', 'Paga') DEFAULT 'Producao';

CREATE TABLE notas_imagens (
  id INT PRIMARY KEY AUTO_INCREMENT,
  nota_id INT NOT NULL,
  caminho_imagem VARCHAR(255) NOT NULL,
  FOREIGN KEY (nota_id) REFERENCES notas(id) ON DELETE CASCADE
);

CREATE TABLE produtos_acompanhamento(
	id int auto_increment primary key,
    produto_id int not null,
    quantidade int not null,
    local varchar(256),
    data_saida datetime default current_timestamp,
    foreign key (produto_id) references produtos(id)
)